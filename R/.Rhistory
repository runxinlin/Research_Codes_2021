count_nas
portfolio_clean2 <- portfolio_clean2 %>%
mutate(Market_Level = rollapply((1+MR_RF),FUN = prod, width=1:nrow(portfolio_clean2),align="right"),
SMB = round((1/3)*((1/3)*(S_Value+S_Neutral_PE+S_Growth)-
(1/3)*(B_Value+B_Neutral_PE+B_Growth)+
(1/3)*(S_Robust+S_Neutral_OP+S_Growth)-
(1/3)*(B_Robust+B_Neutral_OP+B_Growth)+
(1/3)*(S_Conservative+S_Neutral_INV+S_Aggressive)-
(1/3)*(B_Conservative+B_Neutral_INV+B_Aggressive)),4),
HML = round((1/2)*(S_Value+B_Value)-(1/2)*(S_Growth+B_Growth),4),
RMW = round((1/2)*(S_Robust+B_Robust)-(1/2)*(S_Weak+B_Weak),4),
CMA = round((1/2)*(S_Conservative+B_Conservative)-(1/2)*(S_Aggressive+B_Aggressive),4),
SMB_Level = rollapply((1+SMB),
FUN = prod, width=1:nrow(portfolio_clean2),align="right"),
HML_Level = rollapply((1+HML),
FUN = prod, width=1:nrow(portfolio_clean2),align="right"),
RMW_Level = rollapply((1+RMW),
FUN = prod, width=1:nrow(portfolio_clean2),align="right"),
CMA_Level = rollapply((1+CMA),
FUN = prod, width=1:nrow(portfolio_clean2),align="right"))
portfolio_clean2 %>%
select(Dates, MKT = Market_Level, SMB = SMB_Level, HML = HML_Level, RMW = RMW_Level, CMA = CMA_Level) %>%
gather(key = "Strategy", value = "Value", -1) %>%
ggplot(aes(x=Dates, y=Value,colour=Strategy))+
geom_line(size=1)+
theme_bw()+
ggtitle("The evolution of R1 invested in five different portfolios")+
theme(text = element_text(size = 15),
panel.grid.major.y = element_line(color = "grey",
size = 0.7,
linetype = 2))+
geom_text(
data = . %>% filter(Dates == max(Dates)),
aes(label = round(Value, 2)),
vjust = "outward", hjust = "outward",fontface ="plain", color = "black", size = 4, check_overlap = T,
show.legend = FALSE)
# Clean the extreme values from the portfolio returns
portfolio_clean <- portfolio_df %>%
filter_at(vars(names(.[,2:12])),all_vars(.>-0.2 & .<0.2 & !is.na(.)))
count_nas <- sapply(portfolio_clean, function(x){sum(is.na(x))})
count_nas
portfolio_clean <- portfolio_clean %>%
mutate(WML = round(Winners-Losers,4),
Market_Level = rollapply((1+MR_RF), FUN = prod, width=1:nrow(portfolio_clean),align="right"),
SMB_Level = rollapply((1+(Small-Big)), FUN = prod, width=1:nrow(portfolio_clean),align="right"),
HML_Level = rollapply((1+(Value-Growth)), FUN = prod, width=1:nrow(portfolio_clean),align="right"),
WML_Level = rollapply((1+(Winners-Losers)), FUN = prod, width=1:nrow(portfolio_clean),align="right"),
RMW_Level = rollapply((1+(Robust-Weak)), FUN = prod, width=1:nrow(portfolio_clean),align="right"),
CMA_Level = rollapply((1+(Conservative-Aggressive)), FUN = prod, width=1:nrow(portfolio_clean),align="right"))
portfolio_clean %>%
select(Dates, MKT = Market_Level, SMB = SMB_Level, HML = HML_Level, WML = WML_Level, RMW = RMW_Level, CMA = CMA_Level) %>%
gather(key = "Strategy", value = "Value", -1) %>%
ggplot(aes(x=Dates, y=Value,colour=Strategy))+
geom_line(size=1)+
theme_bw()+
ggtitle("The evolution of R1 invested in 6 Different Portfolios")
portfolio_clean3 <- portfolio_df3 %>%
filter_at(vars(names(.[,2:8])),all_vars(.>-0.2 & .<0.2 & !is.na(.)))
hld_period_calcs3 <- function(a, b, c, weights =1, port_number1, port_number2){
temp <- intersect(c[[port_number2]],b[[port_number1]])
port <- a[,temp]
# a is holding_period_return, b for HML list, c for SMB list, port_number1 for HML, port_number2 for SMB
port <- port %>% select_if(~sum(is.na(.)) == 0) %>% select_if(~!all(.==0))
starting_weights = rep(weights, length(port))
level = rbind(starting_weights,port+1)
level = rollapply(level, FUN = prod, width = 1:(Holding +1), align = "right")
value = rowSums(level,na.rm = T)
returns = round((value[-1]-value[-length(value)])/value[-length(value)],4) # log return
# returns = round(((value[2:length(value)] - value[1:(length(value)-1)])/value[1:(length(value)-1)]),4) # simple return
return(returns)
}
Lookback <- trading_days
Periods <- trunc((Len-Lookback-Gap)/Holding)
Periods
portfolio_df3 <- data.frame(Dates = df_return$Dates[-c(1:(Lookback+Gap))][1:(Periods*Holding)],
MR_RF = df_return$MR_RF[-c(1:(Lookback+Gap))][1:(Periods*Holding)],
B_Value = unlist(Map(hld_period_calcs3, holding_return_list, HML, SMB,
port_number1 = 3, port_number2 = 1)),
B_Neutral_PE = unlist(Map(hld_period_calcs3, holding_return_list, HML, SMB,
port_number1 = 2, port_number2 = 1)),
B_Growth = unlist(Map(hld_period_calcs3, holding_return_list, HML, SMB,
port_number1 = 1, port_number2 = 1)),
S_Value = unlist(Map(hld_period_calcs3, holding_return_list, HML, SMB,
port_number1 = 3, port_number2 = 2)),
S_Neutral_PE = unlist(Map(hld_period_calcs3, holding_return_list, HML, SMB,
port_number1 = 2, port_number2 = 2)),
S_Growth = unlist(Map(hld_period_calcs3, holding_return_list, HML, SMB,
port_number1 = 1, port_number2 = 2))
)
count_nas <- sapply(portfolio_df3, function(x){sum(is.na(x))})
count_nas
portfolio_clean3 <- portfolio_df3 %>%
filter_at(vars(names(.[,2:8])),all_vars(.>-0.2 & .<0.2 & !is.na(.)))
count_nas <- sapply(portfolio_clean3, function(x){sum(is.na(x))})
count_nas
portfolio_clean3 <- portfolio_clean3 %>%
mutate(Market_Level = rollapply((1+MR_RF),FUN = prod, width=1:nrow(portfolio_clean3),align="right"),
SMB = (1/3)*(S_Value+S_Neutral_PE+S_Growth)-(1/3)*(B_Value+B_Neutral_PE+B_Growth),
HML = (1/2)*(S_Value+B_Value)-(1/2)*(S_Growth+B_Growth),
SMB_Level = rollapply((1+SMB),
FUN = prod, width=1:nrow(portfolio_clean3),align="right"),
HML_Level = rollapply((1+HML),
FUN = prod, width=1:nrow(portfolio_clean3),align="right"))
portfolio_clean3 %>%
select(Dates, MKT = Market_Level, SMB = SMB_Level, HML = HML_Level) %>%
gather(key = "Strategy", value = "Value", -1) %>%
ggplot(aes(x=Dates, y=Value,colour=Strategy))+
geom_line(size=1)+
theme_bw()+
ggtitle("The evolution of R1 invested in three different strategies")+
theme(text = element_text(size = 15),
panel.grid.major.y = element_line(color = "grey",
size = 0.7,
linetype = 2))+
geom_text(
data = . %>% filter(Dates == max(Dates)),
aes(label = round(Value, 2)),
vjust = "outward", hjust = "outward",fontface ="plain", color = "black", size = 4, check_overlap = T,
show.legend = FALSE)
tmp1 <- portfolio_clean3 %>% select(Dates, MR_RF, SMB, HML)
tmp2 <- portfolio_clean %>% select(Dates,WML)
df_FF4 <- merge(tmp1,tmp2,by.y = 'Dates')
Dates <- df_Size$Dates
df_ln_Size <- log(df_Size[,-1])
df_ln_Size <-  apply(df_ln_Size, MARGIN = 2, scale)
df_ln_Size <- cbind(Dates,data.frame(t(df_ln_Size)))
df_ln_Size
show(df_ln_Size)
Dates <- df_Size$Dates
df_ln_Size <- log(df_Size[,-1])
df_ln_Size <-  apply(df_ln_Size, MARGIN = 2, scale)
df_ln_Size <- cbind(Dates,df_ln_Size))
View(df_ln_Size)
Dates <- df_Size$Dates
df_ln_Size <- log(df_Size[,-1])
df_ln_Size <-  apply(df_ln_Size, MARGIN = 2, scale)
df_ln_Size <- cbind(Dates,df_ln_Size)
colnames(df_ln_Size) <- colnames(df_Size)
Dates <- df_Size$Dates
df_ln_Size <- log(df_Size[,-1])
df_ln_Size <-  apply(df_ln_Size, MARGIN = 2, scale)
df_ln_Size <- cbind(Dates,data_frame(df_ln_Size))
colnames(df_ln_Size) <- colnames(df_Size)
Dates <- df_Size$Dates
df_ln_Size <- log(df_Size[,-1])
df_ln_Size <-  apply(df_ln_Size, MARGIN = 2, scale)
df_ln_Size <- cbind(Dates,as.data.frame(df_ln_Size))
colnames(df_ln_Size) <- colnames(df_Size)
apply(df_ln_Size[,-1], 1, mean, na.rm =T)
apply(df_ln_Size[,-1], 2, mean, na.rm =T)
<style>
.superlonghtml{
width: 900px;
height : 400px;
overflow-y: scroll;
overflow-x: scroll;
}
.superlonghtml img{
max-height: none;;
}
</style>
<div class="superlonghtml">
portfolio_df
portfolio_df2
portfolio_df3
is.nan.data.frame <- function(x)
do.call(cbind, lapply(x, is.nan))
df_std_PE <-  apply(df_PE[, -1], 2, scale)
df_std_PE <- cbind(Dates,as.data.frame(df_std_PE))
colnames(df_std_PE)<- colnames(df_PE)
# Test whether it works
apply(df_ln_Size[,-1], 2, mean, na.rm =T)
df_std_OP <-  apply(df_OP[, -1], 2, scale)
df_std_OP <- cbind(Dates,data.frame(df_std_OP))
colnames(df_std_OP)<- colnames(df_OP)
apply(df_std_OP[,-1], 2, mean, na.rm =T)
apply(df_std_PE[,-1], 2, mean, na.rm =T)
df_std_INV <-  apply(t(df_INV[, -1]), 2, scale)
df_std_INV <- cbind(Dates,data.frame(t(df_std_INV)))
colnames(df_std_INV)<- colnames(df_INV)
df_std_INV <-  apply(df_INV[, -1], 2, scale)
df_std_INV <- cbind(Dates,as.data.frame(df_std_INV))
colnames(df_std_INV)<- colnames(df_INV)
apply(df_std_INV[,-1], 2, mean, na.rm =T)
apply(df_std_OP[,-1], 2, mean, na.rm =T)
<div class="superlonghtml">
```{r}
portfolio_df3
```
</div>
portfolio_df3
hld_size_calcs <- function(a, b, c, port_number1, port_number2){
temp <- intersect(c[[port_number2]],b[[port_number1]])
port <- a[,temp]
# a is holding_size_list, b is HML list, c is SMB list, port_number1 for HML, port_number2 for SMB
# Only select the row that do not have na or full of 0s
port <- port %>% select_if(~sum(is.na(.)) == 0) %>% select_if(~!all(.==0))
row_mean = rollapply(port, FUN = mean, width = 1:(Holding +1), align = "right",by.column = F)
return(row_mean)
}
hld_chr_calcs <- function(a, b, c, port_number1, port_number2){
temp <- intersect(c[[port_number2]],b[[port_number1]])
port <- a[,temp]
# a is holding_size_list, b is HML list, c is SMB list, port_number1 for HML, port_number2 for SMB
# Only select the row that do not have na or full of 0s
port <- port %>% select_if(~sum(is.na(.)) == 0) %>% select_if(~!all(.==0))
row_mean = rollapply(port, FUN = mean, width = 1:(Holding +1), align = "right",by.column = F)
return(row_mean)
}
test5 <- data.frame(hld_chr_calcs(a= holding_size_list[[1]],b = HML[[1]], c = SMB[[1]],port_number1=1, port_number2=1))
hld_chr_calcs <- function(a, b, c, port_number1, port_number2){
temp <- intersect(c[[port_number2]],b[[port_number1]])
port <- a[,temp]
# a is holding_size_list, b is HML list, c is SMB list, port_number1 for HML, port_number2 for SMB
# Only select the row that do not have na or full of 0s
port <- port %>% select_if(~sum(is.na(.)) == 0) %>% select_if(~!all(.==0))
row_mean = rollapply(port, FUN = mean, width = 1:(Holding +1), align = "right",by.column = F)
return(row_mean)
}
test5 <- data.frame(hld_chr_calcs(a= holding_size_list[[1]],b = HML[[1]], c = SMB[[1]],port_number1=1, port_number2=1))
library(readxl)
library(xts)
library(ggplot2)
library(dplyr)
library(tidyverse)
hld_chr_calcs <- function(a, b, c, port_number1, port_number2){
temp <- intersect(c[[port_number2]],b[[port_number1]])
port <- a[,temp]
# a is holding_size_list, b is HML list, c is SMB list, port_number1 for HML, port_number2 for SMB
# Only select the row that do not have na or full of 0s
port <- port %>% select_if(~sum(is.na(.)) == 0) %>% select_if(~!all(.==0))
row_mean = rollapply(port, FUN = mean, width = 1:(Holding +1), align = "right",by.column = F)
return(row_mean)
}
test5 <- data.frame(hld_chr_calcs(a= holding_size_list[[1]],b = HML[[1]], c = SMB[[1]],port_number1=1, port_number2=1))
test6 <- Map(hld_chr_calcs, a= holding_size_list,b = HML, c = SMB, port_number1=1, port_number2=1)
test5
Lookback <- trading_days
Periods <- trunc((Len-Lookback-Gap)/Holding)
Periods
df_18_size <- data.frame(Dates = df_return$Dates[-c(1:(Lookback+Gap))][1:(Periods*Holding)],
B_Value = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 3, port_number2 = 1)),
B_Neutral_PE = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 2, port_number2 = 1)),
B_Growth = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 1, port_number2 = 1)),
B_Robust = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 1, port_number2 = 1)),
B_Neutral_OP = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 2, port_number2 = 1)),
B_Weak = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 3, port_number2 = 1)),
B_Conservative= unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 1, port_number2 = 1)),
B_Neutral_INV = unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 2, port_number2 = 1)),
B_Aggressive = unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 3, port_number2 = 1)),
S_Value = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 3, port_number2 = 2)),
S_Neutral_PE = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 2, port_number2 = 2)),
S_Growth = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 1, port_number2 = 2)),
S_Robust = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 1, port_number2 = 2)),
S_Neutral_OP = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 2, port_number2 = 2)),
S_Weak = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 3, port_number2 = 2)),
S_Conservative= unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 1, port_number2 = 2)),
S_Neutral_INV = unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 2, port_number2 = 2)),
S_Aggressive = unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 3, port_number2 = 2))
)
count_nas <- sapply(df_18_size, function(x){sum(is.na(x))})
count_nas
Dates <- df_18_PR$Dates
hld_chr_calcs <- function(a, b, c, port_number1, port_number2){
temp <- intersect(c[[port_number2]],b[[port_number1]])
port <- a[,temp]
# Only select the row that do not full of 0s or NAs
port <- port %>% select_if(~sum(is.na(.)) == 0) %>% select_if(~!all(.==0))
row_mean = rollapply(port, FUN = mean, width = 1:(Holding +1), align = "right",by.column = F)
return(row_mean)
}
test5 <- data.frame(hld_chr_calcs(a= holding_size_list[[1]],b = HML[[1]], c = SMB[[1]],port_number1=1, port_number2=1))
test6 <- Map(hld_chr_calcs, a= holding_size_list,b = HML, c = SMB, port_number1=1, port_number2=1)
test5
test6
Lookback <- trading_days
Periods <- trunc((Len-Lookback-Gap)/Holding)
Periods
df_18_size <- data.frame(Dates = df_return$Dates[-c(1:(Lookback+Gap))][1:(Periods*Holding)],
B_Value = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 3, port_number2 = 1)),
B_Neutral_PE = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 2, port_number2 = 1)),
B_Growth = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 1, port_number2 = 1)),
B_Robust = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 1, port_number2 = 1)),
B_Neutral_OP = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 2, port_number2 = 1)),
B_Weak = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 3, port_number2 = 1)),
B_Conservative= unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 1, port_number2 = 1)),
B_Neutral_INV = unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 2, port_number2 = 1)),
B_Aggressive = unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 3, port_number2 = 1)),
S_Value = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 3, port_number2 = 2)),
S_Neutral_PE = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 2, port_number2 = 2)),
S_Growth = unlist(Map(hld_chr_calcs, holding_size_list, HML, SMB,
port_number1 = 1, port_number2 = 2)),
S_Robust = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 1, port_number2 = 2)),
S_Neutral_OP = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 2, port_number2 = 2)),
S_Weak = unlist(Map(hld_chr_calcs, holding_size_list, RMW, SMB,
port_number1 = 3, port_number2 = 2)),
S_Conservative= unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 1, port_number2 = 2)),
S_Neutral_INV = unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 2, port_number2 = 2)),
S_Aggressive = unlist(Map(hld_chr_calcs, holding_size_list, CMA, SMB,
port_number1 = 3, port_number2 = 2))
)
count_nas <- sapply(df_18_size, function(x){sum(is.na(x))})
count_nas
df_18_PE <- data.frame(Dates = df_return$Dates[-c(1:(Lookback+Gap))][1:(Periods*Holding)],
B_Value = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 3, port_number2 = 1)),
B_Neutral_PE = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 2, port_number2 = 1)),
B_Growth = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 1, port_number2 = 1)),
B_Robust = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 1, port_number2 = 1)),
B_Neutral_OP = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 2, port_number2 = 1)),
B_Weak = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 3, port_number2 = 1)),
B_Conservative= unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 1, port_number2 = 1)),
B_Neutral_INV = unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 2, port_number2 = 1)),
B_Aggressive = unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 3, port_number2 = 1)),
S_Value = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 3, port_number2 = 2)),
S_Neutral_PE = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 2, port_number2 = 2)),
S_Growth = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 1, port_number2 = 2)),
S_Robust = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 1, port_number2 = 2)),
S_Neutral_OP = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 2, port_number2 = 2)),
S_Weak = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 3, port_number2 = 2)),
S_Conservative= unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 1, port_number2 = 2)),
S_Neutral_INV = unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 2, port_number2 = 2)),
S_Aggressive = unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 3, port_number2 = 2))
)
count_nas <- sapply(df_18_PE, function(x){sum(is.na(x))})
count_nas
df_18_std_PE <-  apply(t(df_18_PE[, -1]), MARGIN = 2, scale)
df_18_std_PE <- cbind(Dates,data.frame(t(df_18_std_PE)))
Dates <- df_18_PR$Dates
df_18_PR = portfolio_df2[,-2]
df_18_PR
Dates <- df_18_PR$Dates
### cross-sectional z-sores for the size of 18 standard portfolios
df_18_std_size <-  apply(t(df_18_size[, -1]), MARGIN = 2, scale)
df_18_std_size <- cbind(Dates,data.frame(t(df_18_std_size)))
colnames(df_18_std_size) <- colnames(df_18_PR)
apply(df_18_std_size[,-1], 1, mean, na.rm =T) # Test whether the standardization makes sense
Dates <- df_18_PR$Dates
### cross-sectional z-sores for the size of 18 standard portfolios
df_18_std_size <-  apply(t(df_18_size[, -1]), MARGIN = 2, scale)
df_18_std_size <- cbind(Dates,data.frame(t(df_18_std_size)))
colnames(df_18_std_size) <- colnames(df_18_PR)
# apply(df_18_std_size[,-1], 1, mean, na.rm =T) # Test whether the standardization makes sense
df_18_PE <- data.frame(Dates = df_return$Dates[-c(1:(Lookback+Gap))][1:(Periods*Holding)],
B_Value = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 3, port_number2 = 1)),
B_Neutral_PE = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 2, port_number2 = 1)),
B_Growth = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 1, port_number2 = 1)),
B_Robust = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 1, port_number2 = 1)),
B_Neutral_OP = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 2, port_number2 = 1)),
B_Weak = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 3, port_number2 = 1)),
B_Conservative= unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 1, port_number2 = 1)),
B_Neutral_INV = unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 2, port_number2 = 1)),
B_Aggressive = unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 3, port_number2 = 1)),
S_Value = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 3, port_number2 = 2)),
S_Neutral_PE = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 2, port_number2 = 2)),
S_Growth = unlist(Map(hld_chr_calcs, holding_PE_list, HML, SMB,
port_number1 = 1, port_number2 = 2)),
S_Robust = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 1, port_number2 = 2)),
S_Neutral_OP = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 2, port_number2 = 2)),
S_Weak = unlist(Map(hld_chr_calcs, holding_PE_list, RMW, SMB,
port_number1 = 3, port_number2 = 2)),
S_Conservative= unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 1, port_number2 = 2)),
S_Neutral_INV = unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 2, port_number2 = 2)),
S_Aggressive = unlist(Map(hld_chr_calcs, holding_PE_list, CMA, SMB,
port_number1 = 3, port_number2 = 2))
)
count_nas <- sapply(df_18_PE, function(x){sum(is.na(x))})
count_nas
df_18_std_PE <-  apply(t(df_18_PE[, -1]), MARGIN = 2, scale)
df_18_std_PE <- cbind(Dates,data.frame(t(df_18_std_PE)))
colnames(df_18_std_PE) <- colnames(df_18_PR)
apply(df_18_std_size[,-1], 1, mean, na.rm =T) ## Test whether the standardization makes sense
df_18_INV <- data.frame(Dates = df_return$Dates[-c(1:(Lookback+Gap))][1:(Periods*Holding)],
B_Value = unlist(Map(hld_chr_calcs, holding_INV_list, HML, SMB,
port_number1 = 3, port_number2 = 1)),
B_Neutral_INV = unlist(Map(hld_chr_calcs, holding_INV_list, HML, SMB,
port_number1 = 2, port_number2 = 1)),
B_Growth = unlist(Map(hld_chr_calcs, holding_INV_list, HML, SMB,
port_number1 = 1, port_number2 = 1)),
B_Robust = unlist(Map(hld_chr_calcs, holding_INV_list, RMW, SMB,
port_number1 = 1, port_number2 = 1)),
B_Neutral_INV = unlist(Map(hld_chr_calcs, holding_INV_list, RMW, SMB,
port_number1 = 2, port_number2 = 1)),
B_Weak = unlist(Map(hld_chr_calcs, holding_INV_list, RMW, SMB,
port_number1 = 3, port_number2 = 1)),
B_Conservative= unlist(Map(hld_chr_calcs, holding_INV_list, CMA, SMB,
port_number1 = 1, port_number2 = 1)),
B_Neutral_INV = unlist(Map(hld_chr_calcs, holding_INV_list, CMA, SMB,
port_number1 = 2, port_number2 = 1)),
B_Aggressive = unlist(Map(hld_chr_calcs, holding_INV_list, CMA, SMB,
port_number1 = 3, port_number2 = 1)),
S_Value = unlist(Map(hld_chr_calcs, holding_INV_list, HML, SMB,
port_number1 = 3, port_number2 = 2)),
S_Neutral_INV = unlist(Map(hld_chr_calcs, holding_INV_list, HML, SMB,
port_number1 = 2, port_number2 = 2)),
S_Growth = unlist(Map(hld_chr_calcs, holding_INV_list, HML, SMB,
port_number1 = 1, port_number2 = 2)),
S_Robust = unlist(Map(hld_chr_calcs, holding_INV_list, RMW, SMB,
port_number1 = 1, port_number2 = 2)),
S_Neutral_INV = unlist(Map(hld_chr_calcs, holding_INV_list, RMW, SMB,
port_number1 = 2, port_number2 = 2)),
S_Weak = unlist(Map(hld_chr_calcs, holding_INV_list, RMW, SMB,
port_number1 = 3, port_number2 = 2)),
S_Conservative= unlist(Map(hld_chr_calcs, holding_INV_list, CMA, SMB,
port_number1 = 1, port_number2 = 2)),
S_Neutral_INV = unlist(Map(hld_chr_calcs, holding_INV_list, CMA, SMB,
port_number1 = 2, port_number2 = 2)),
S_Aggressive = unlist(Map(hld_chr_calcs, holding_INV_list, CMA, SMB,
port_number1 = 3, port_number2 = 2))
)
count_nas <- sapply(df_18_INV, function(x){sum(is.na(x))})
count_nas
df_18_std_INV <-  apply(t(df_18_INV[, -1]), MARGIN = 2, scale)
df_18_std_INV <- cbind(Dates,data.frame(t(df_18_std_INV)))
colnames(df_18_std_INV) <- colnames(df_18_PR)
View(df_std_INV)
View(df_18_std_INV)
View(df_18_PE)
View(df_18_std_PE)
View(df_std_PE)
View(df_ln_Size)
is.nan.data.frame <- function(x)
do.call(cbind, lapply(x, is.nan))
Dates <- df_Size$Dates
df_ln_Size <- log(df_Size[,-1])
df_ln_Size <-  apply(df_ln_Size, MARGIN = 2, scale)
df_ln_Size <- cbind(Dates,as.data.frame(df_ln_Size))
colnames(df_ln_Size) <- colnames(df_Size)
df_ln_Size[is.nan(df_ln_Size)] <- NA
## Test whether it works
# apply(df_ln_Size[,-1], 2, mean, na.rm =T)
View(df_std_PE)
View(df_PE)
df_std_PE <-  apply(df_PE[, -1], 2, scale)
df_std_PE <- cbind(Dates,as.data.frame(df_std_PE))
colnames(df_std_PE)<- colnames(df_PE)
df_std_PE[is.nan(df_std_PE)] <- NA
View(df_std_OP)
df_std_OP <-  apply(df_OP[, -1], 2, scale)
df_std_OP <- cbind(Dates,data.frame(df_std_OP))
colnames(df_std_OP)<- colnames(df_OP)
df_std_OP[is.nan(df_std_OP)] <- NA
df_std_INV <-  apply(df_INV[, -1], 2, scale)
df_std_INV <- cbind(Dates,as.data.frame(df_std_INV))
colnames(df_std_INV)<- colnames(df_INV)
df_std_INV[is.nan(df_std_INV)] <- NA
View(df_std_INV)
